#!@python_path@
# coding: utf-8

# Copyright (C) 2017-present Robert Griesel
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>

import sys, os.path, gettext

from lemma.services.text_shaper import TextShaper
from lemma.services.text_renderer import TextRenderer
from lemma.services.app_info import AppInfo
from lemma.services.paths import Paths
from lemma.document_repo.document_repo import DocumentRepo
from lemma.services.timer import Timer
import lemma.ui.application as application
from lemma.storage.storage import Storage
from lemma.services.settings import Settings
from lemma.application_state.application_state import ApplicationState

# setup gettext
gettext.install('lemma', names=('ngettext',), localedir='@localedir_path@')

# init static variables
AppInfo.init_lemma_version('@lemma_version@')
Paths.init_resources_folder('@resources_path@')

# setup fonts
font_path = os.path.join(Paths.get_resources_folder(), 'fonts')

TextShaper.add_font('book', os.path.join(font_path, 'newcomputermodern/otf/NewCM10-Book.otf'), 19.407, 21, 7, 0, 1)
TextShaper.add_font('bold', os.path.join(font_path, 'newcomputermodern/otf/NewCM10-Bold.otf'), 19.407, 21, 7, 0, 1)
TextShaper.add_font('bolditalic', os.path.join(font_path, 'newcomputermodern/otf/NewCM10-BoldItalic.otf'), 19.407, 21, 7, 0, 1)
TextShaper.add_font('italic', os.path.join(font_path, 'newcomputermodern/otf/NewCM10-Italic.otf'), 19.407, 21, 7, 0, 1)
TextShaper.add_font('math', os.path.join(font_path, 'newcomputermodern/otf/NewCMMath-Book.otf'), 19.407, 21, 7, 0, 1)
TextShaper.add_font('math_small', os.path.join(font_path, 'newcomputermodern/otf/NewCMMath-Book.otf'), 14, 12, 2, 0, 0)
TextShaper.add_font('teaser', os.path.join(font_path, 'newcomputermodern/otf/NewCM08-Book.otf'), 14, 16, 4, 0, 0)
TextShaper.add_font('h1', os.path.join(font_path, 'newcomputermodern/otf/NewCMSans10-Bold.otf'), 32, 38, 11, 4, 4)
TextShaper.add_font('h2', os.path.join(font_path, 'newcomputermodern/otf/NewCMSans10-Bold.otf'), 28, 33, 11, 4, 3)
TextShaper.add_font('h3', os.path.join(font_path, 'newcomputermodern/otf/NewCMSans10-Bold.otf'), 24, 27, 8, 3, 2)
TextShaper.add_font('h4', os.path.join(font_path, 'newcomputermodern/otf/NewCMSans10-Book.otf'), 24, 27, 8, 3, 2)
TextShaper.add_font('h5', os.path.join(font_path, 'newcomputermodern/otf/NewCMSans10-BookOblique.otf'), 24, 27, 8, 3, 2)
TextShaper.add_font('h6', os.path.join(font_path, 'newcomputermodern/otf/NewCMSans10-Book.otf'), 19.407, 21, 7, 0, 1)
TextShaper.add_font('emojis', os.path.join(font_path, 'Noto_Color_Emoji/NotoColorEmoji-Regular.ttf'), 19.407, 21, 7, 0, 1)

TextRenderer.add_font('book', os.path.join(font_path, 'newcomputermodern/otf/NewCM10-Book.otf'), 19.407, 21, 7)
TextRenderer.add_font('bold', os.path.join(font_path, 'newcomputermodern/otf/NewCM10-Bold.otf'), 19.407, 21, 7)
TextRenderer.add_font('bolditalic', os.path.join(font_path, 'newcomputermodern/otf/NewCM10-BoldItalic.otf'), 19.407, 21, 7)
TextRenderer.add_font('italic', os.path.join(font_path, 'newcomputermodern/otf/NewCM10-Italic.otf'), 19.407, 21, 7)
TextRenderer.add_font('math', os.path.join(font_path, 'newcomputermodern/otf/NewCMMath-Book.otf'), 19.407, 21, 7)
TextRenderer.add_font('math_small', os.path.join(font_path, 'newcomputermodern/otf/NewCMMath-Book.otf'), 14, 12, 2)
TextRenderer.add_font('teaser', os.path.join(font_path, 'newcomputermodern/otf/NewCM08-Book.otf'), 14, 16, 4)
TextRenderer.add_font('h1', os.path.join(font_path, 'newcomputermodern/otf/NewCMSans10-Bold.otf'), 32, 38, 11)
TextRenderer.add_font('h2', os.path.join(font_path, 'newcomputermodern/otf/NewCMSans10-Bold.otf'), 28, 33, 11)
TextRenderer.add_font('h3', os.path.join(font_path, 'newcomputermodern/otf/NewCMSans10-Bold.otf'), 24, 27, 8)
TextRenderer.add_font('h4', os.path.join(font_path, 'newcomputermodern/otf/NewCMSans10-Book.otf'), 24, 27, 8)
TextRenderer.add_font('h5', os.path.join(font_path, 'newcomputermodern/otf/NewCMSans10-BookOblique.otf'), 24, 27, 8)
TextRenderer.add_font('h6', os.path.join(font_path, 'newcomputermodern/otf/NewCMSans10-Book.otf'), 19.407, 21, 7)
TextRenderer.add_font('emojis', os.path.join(font_path, 'Noto_Color_Emoji/NotoColorEmoji-Regular.ttf'), 19.407, 21, 7)

# setup folder for user themes
pathname = Paths.get_user_themes_folder()
if not os.path.exists(pathname): os.makedirs(pathname)

# setup folder for notes
pathname = Paths.get_notes_folder()
if not os.path.exists(pathname): os.makedirs(pathname)

# setup config folder
pathname = Paths.get_config_folder()
if not os.path.isdir(pathname): os.makedirs(pathname)

Settings.init()
ApplicationState.init()
DocumentRepo.init()
Storage.populate_settings()
Storage.populate_history()

do_time = '--time' in sys.argv
if do_time: sys.argv.remove('--time')

view = application.Application()
view.run(sys.argv)

if do_time: Timer.print()
